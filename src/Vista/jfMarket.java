package Vista;
import Controlador.ControlAcceso;
import Controlador.CtrlArqueo;
import Controlador.CtrlCategoria;
import Controlador.CtrlCliente;
import Controlador.CtrlCobroCredito;
import Controlador.CtrlCompra;
import Controlador.CtrlEmpresa;
import Controlador.CtrlEntrada;
import Controlador.CtrlFiltroProducto;
import Controlador.CtrlListadoSotckGeneral;
import Controlador.CtrlListadoVentasPorVendedor;
import Controlador.CtrlVenta;
import Controlador.CtrlLote;
import Controlador.CtrlMarca;
import Controlador.CtrlNotaCredito;
import Controlador.CtrlPagoCredito;
import Controlador.CtrlProducto;
import Controlador.CtrlProductoListadoSotckLimite;
import Controlador.CtrlProveedor;
import Controlador.CtrlSalida;
import Controlador.CtrlTicket;
import Controlador.CtrlTimbrado;
import Controlador.CtrlUsuario;
import Controlador.CtrlVentasyGanancias;
import Controlador.FondoPanel;
import Controlador.formatoFecha;
import Modelo.Arqueo;
import Modelo.Categoria;
import Modelo.CobroCredito;
import Modelo.Compra;
import Modelo.ConArqueo;
import Modelo.ConCobroCredito;
import Modelo.ConEntrada;
import Modelo.ConLote;
import Modelo.ConPagoCredito;
import Modelo.ConSalida;
import Modelo.ConTicket;
import Modelo.Conexion;
import Modelo.ConsultaAcceso;
import Modelo.ConsultaCompra;
import Modelo.ConsultaCategoria;
import Modelo.ConsultaCliente;
import Modelo.ConsultaEmpresa;
import Modelo.ConsultaMarca;
import Modelo.ConsultaNota;
import Modelo.ConsultaV;
import Modelo.ConsultaProducto;
import Modelo.ConsultaProveedor;
import Modelo.ConsultaTimbrado;
import Modelo.ConsultaUsuario;
import Modelo.Empresa;
import Modelo.Entrada;
import Modelo.Venta;
import Modelo.Lote;
import Modelo.Marca;
import Modelo.NotaCredito;
import Modelo.PagoCredito;
import Modelo.Persona;
import Modelo.Producto;
import Modelo.Proveedor;
import Modelo.Salida;
import Modelo.Timbrado;
import Modelo.Usuario;
import Reportes.jfListadoStockGeneral;
import Reportes.jfVentasPorVendedores;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author JFAA
 */
public class jfMarket extends javax.swing.JFrame {
    Usuario usu;
    public static String Nombre="";
    String url="";
    FondoPanel fondo=new FondoPanel(url);
    public jfMarket() {        
        this.setContentPane(fondo);
        initComponents();
        //para definir el tama침o en el cual se ejecuta la ventana
        this.setSize(new Dimension(1920,1211));
        //Colocar en el centro el formulario
        this.setLocationRelativeTo(null);
        //Para cambiar el nombre de la ventana de ejecuccion
        this.setTitle("Sistema de Facturaci칩n");
        //Maximizar el tama침o del formulario
        setExtendedState(MAXIMIZED_BOTH);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpFondo = new FondoPanel();
        jlbUsuario = new javax.swing.JLabel();
        jlbNombreUsu = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnexitmarket = new javax.swing.JPanel();
        exitmarket = new javax.swing.JLabel();
        jmPrincipal = new javax.swing.JMenuBar();
        jmMovimiento = new javax.swing.JMenu();
        jmVentas = new javax.swing.JMenuItem();
        jmiNotaCredito = new javax.swing.JMenuItem();
        jmiCobroCredito = new javax.swing.JMenuItem();
        jmCaja = new javax.swing.JMenu();
        jmiCierre = new javax.swing.JMenuItem();
        jmUsuario = new javax.swing.JMenu();
        jmABMUsuario = new javax.swing.JMenuItem();
        jmiCambiar = new javax.swing.JMenuItem();
        jmCliente = new javax.swing.JMenu();
        jmiCliente = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmiOtros = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jmProductos = new javax.swing.JMenu();
        jmAbmProductos = new javax.swing.JMenuItem();
        jmCategoria = new javax.swing.JMenuItem();
        jmiMarcas = new javax.swing.JMenuItem();
        jmConsultas = new javax.swing.JMenu();
        jmiFiltrarProductos = new javax.swing.JMenuItem();
        jmiProductoStockLimite = new javax.swing.JMenuItem();
        jmiVentasyG = new javax.swing.JMenuItem();
        jmiListadoStockGeneral = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Dolly");

        jpFondo.setMaximumSize(new java.awt.Dimension(1920, 1211));
        jpFondo.setMinimumSize(new java.awt.Dimension(1920, 1211));
        jpFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbUsuario.setBackground(new java.awt.Color(153, 204, 255));
        jlbUsuario.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        jlbUsuario.setForeground(new java.awt.Color(153, 204, 255));
        jlbUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbUsuario.setBorder(new javax.swing.border.MatteBorder(null));
        jlbUsuario.setPreferredSize(new java.awt.Dimension(2, 5));
        jpFondo.add(jlbUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, 200, 20));

        jlbNombreUsu.setBackground(new java.awt.Color(204, 204, 204));
        jlbNombreUsu.setFont(new java.awt.Font("Lucida Sans", 1, 16)); // NOI18N
        jlbNombreUsu.setForeground(new java.awt.Color(153, 204, 255));
        jlbNombreUsu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNombreUsu.setBorder(new javax.swing.border.MatteBorder(null));
        jpFondo.add(jlbNombreUsu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 610, 260, 20));

        jLabel3.setBackground(new java.awt.Color(153, 204, 255));
        jLabel3.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/usuario.png"))); // NOI18N
        jLabel3.setText("Usuario Actual");
        jpFondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, -1, -1));

        btnexitmarket.setBackground(new java.awt.Color(153, 204, 255));
        btnexitmarket.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 6, 2, 6, new java.awt.Color(0, 1, 59)));
        btnexitmarket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        exitmarket.setFont(new java.awt.Font("Lucida Sans", 3, 20)); // NOI18N
        exitmarket.setForeground(new java.awt.Color(0, 1, 59));
        exitmarket.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitmarket.setText("Exit ");
        exitmarket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitmarket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitmarketMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitmarketMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitmarketMousePressed(evt);
            }
        });

        javax.swing.GroupLayout btnexitmarketLayout = new javax.swing.GroupLayout(btnexitmarket);
        btnexitmarket.setLayout(btnexitmarketLayout);
        btnexitmarketLayout.setHorizontalGroup(
            btnexitmarketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnexitmarketLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitmarket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnexitmarketLayout.setVerticalGroup(
            btnexitmarketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitmarket, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        jpFondo.add(btnexitmarket, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 590, 70, 40));

        jmPrincipal.setBackground(new java.awt.Color(153, 204, 255));
        jmPrincipal.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));

        jmMovimiento.setBackground(new java.awt.Color(153, 204, 255));
        jmMovimiento.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jmMovimiento.setForeground(new java.awt.Color(0, 1, 59));
        jmMovimiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/transferencia-de-dinero.png"))); // NOI18N
        jmMovimiento.setText("Transacci칩n");
        jmMovimiento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmMovimiento.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jmMovimiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jmMovimiento.setPreferredSize(new java.awt.Dimension(200, 50));

        jmVentas.setBackground(new java.awt.Color(193, 237, 254));
        jmVentas.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/ventas.png"))); // NOI18N
        jmVentas.setText("Ventas");
        jmVentas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmVentas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmVentas.setFocusable(true);
        jmVentas.setPreferredSize(new java.awt.Dimension(150, 42));
        jmVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmVentasActionPerformed(evt);
            }
        });
        jmMovimiento.add(jmVentas);

        jmiNotaCredito.setBackground(new java.awt.Color(193, 237, 254));
        jmiNotaCredito.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiNotaCredito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/notacredito.png"))); // NOI18N
        jmiNotaCredito.setText("Nota Cr칠dito");
        jmiNotaCredito.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiNotaCredito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiNotaCredito.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiNotaCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNotaCreditoActionPerformed(evt);
            }
        });
        jmMovimiento.add(jmiNotaCredito);

        jmiCobroCredito.setBackground(new java.awt.Color(193, 237, 254));
        jmiCobroCredito.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiCobroCredito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/cobro_credito.png"))); // NOI18N
        jmiCobroCredito.setText("Cobro Cr칠dito");
        jmiCobroCredito.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiCobroCredito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiCobroCredito.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiCobroCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCobroCreditoActionPerformed(evt);
            }
        });
        jmMovimiento.add(jmiCobroCredito);

        jmPrincipal.add(jmMovimiento);

        jmCaja.setBackground(new java.awt.Color(153, 204, 255));
        jmCaja.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jmCaja.setForeground(new java.awt.Color(0, 1, 59));
        jmCaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/caja_registardora.png"))); // NOI18N
        jmCaja.setText("Caja");
        jmCaja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmCaja.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jmCaja.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jmCaja.setPreferredSize(new java.awt.Dimension(200, 50));

        jmiCierre.setBackground(new java.awt.Color(193, 237, 254));
        jmiCierre.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiCierre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/cierre.png"))); // NOI18N
        jmiCierre.setText("Cierre");
        jmiCierre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiCierre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiCierre.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiCierre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCierreActionPerformed(evt);
            }
        });
        jmCaja.add(jmiCierre);

        jmPrincipal.add(jmCaja);

        jmUsuario.setBackground(new java.awt.Color(153, 204, 255));
        jmUsuario.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jmUsuario.setForeground(new java.awt.Color(0, 1, 59));
        jmUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/usuario.png"))); // NOI18N
        jmUsuario.setText("Usuario");
        jmUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmUsuario.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jmUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jmUsuario.setPreferredSize(new java.awt.Dimension(200, 50));

        jmABMUsuario.setBackground(new java.awt.Color(193, 237, 254));
        jmABMUsuario.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmABMUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/agregar-usuario.png"))); // NOI18N
        jmABMUsuario.setText("AM Usuario");
        jmABMUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmABMUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmABMUsuario.setPreferredSize(new java.awt.Dimension(150, 42));
        jmABMUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmABMUsuarioActionPerformed(evt);
            }
        });
        jmUsuario.add(jmABMUsuario);

        jmiCambiar.setBackground(new java.awt.Color(193, 237, 254));
        jmiCambiar.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiCambiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/cambiar_usuario.png"))); // NOI18N
        jmiCambiar.setText("Cambiar Usuario");
        jmiCambiar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiCambiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiCambiar.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiarActionPerformed(evt);
            }
        });
        jmUsuario.add(jmiCambiar);

        jmPrincipal.add(jmUsuario);

        jmCliente.setBackground(new java.awt.Color(153, 204, 255));
        jmCliente.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jmCliente.setForeground(new java.awt.Color(0, 1, 59));
        jmCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cliente.png"))); // NOI18N
        jmCliente.setText("Cliente");
        jmCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmCliente.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jmCliente.setPreferredSize(new java.awt.Dimension(200, 50));

        jmiCliente.setBackground(new java.awt.Color(193, 237, 254));
        jmiCliente.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/agregar-cliente.png"))); // NOI18N
        jmiCliente.setText("AM Clientes");
        jmiCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiCliente.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiClienteActionPerformed(evt);
            }
        });
        jmCliente.add(jmiCliente);

        jmPrincipal.add(jmCliente);

        jMenu1.setBackground(new java.awt.Color(153, 204, 255));
        jMenu1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jMenu1.setForeground(new java.awt.Color(0, 1, 59));
        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/proveedor.png"))); // NOI18N
        jMenu1.setText("Proveedores");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jMenu1.setPreferredSize(new java.awt.Dimension(200, 50));

        jmiOtros.setBackground(new java.awt.Color(193, 237, 254));
        jmiOtros.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiOtros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/vendedor.png"))); // NOI18N
        jmiOtros.setText("Vendedor");
        jmiOtros.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiOtros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiOtros.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiOtros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiOtrosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiOtros);

        jMenuItem1.setBackground(new java.awt.Color(193, 237, 254));
        jMenuItem1.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/empresa.png"))); // NOI18N
        jMenuItem1.setText("Empresa");
        jMenuItem1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem1.setPreferredSize(new java.awt.Dimension(150, 42));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jmPrincipal.add(jMenu1);

        jmProductos.setBackground(new java.awt.Color(153, 204, 255));
        jmProductos.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jmProductos.setForeground(new java.awt.Color(0, 1, 59));
        jmProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/producto.png"))); // NOI18N
        jmProductos.setText("Producto");
        jmProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmProductos.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jmProductos.setPreferredSize(new java.awt.Dimension(200, 50));

        jmAbmProductos.setBackground(new java.awt.Color(193, 237, 254));
        jmAbmProductos.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmAbmProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/agregar-producto.png"))); // NOI18N
        jmAbmProductos.setText("AM Producto");
        jmAbmProductos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmAbmProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmAbmProductos.setPreferredSize(new java.awt.Dimension(150, 42));
        jmAbmProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAbmProductosActionPerformed(evt);
            }
        });
        jmProductos.add(jmAbmProductos);

        jmCategoria.setBackground(new java.awt.Color(193, 237, 254));
        jmCategoria.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/categorias.png"))); // NOI18N
        jmCategoria.setText("Categoria");
        jmCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmCategoria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmCategoria.setPreferredSize(new java.awt.Dimension(150, 42));
        jmCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCategoriaActionPerformed(evt);
            }
        });
        jmProductos.add(jmCategoria);

        jmiMarcas.setBackground(new java.awt.Color(193, 237, 254));
        jmiMarcas.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiMarcas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/marca.png"))); // NOI18N
        jmiMarcas.setText("Marcas");
        jmiMarcas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiMarcas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiMarcas.setPreferredSize(new java.awt.Dimension(150, 42));
        jmiMarcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMarcasActionPerformed(evt);
            }
        });
        jmProductos.add(jmiMarcas);

        jmPrincipal.add(jmProductos);

        jmConsultas.setBackground(new java.awt.Color(153, 204, 255));
        jmConsultas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 1, 59)));
        jmConsultas.setForeground(new java.awt.Color(0, 1, 59));
        jmConsultas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/consulta.png"))); // NOI18N
        jmConsultas.setText("Consultas");
        jmConsultas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmConsultas.setFont(new java.awt.Font("Lucida Sans", 1, 17)); // NOI18N
        jmConsultas.setPreferredSize(new java.awt.Dimension(220, 50));

        jmiFiltrarProductos.setBackground(new java.awt.Color(193, 237, 254));
        jmiFiltrarProductos.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiFiltrarProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/filtrar.png"))); // NOI18N
        jmiFiltrarProductos.setText("Filtrar Productos");
        jmiFiltrarProductos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiFiltrarProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiFiltrarProductos.setPreferredSize(new java.awt.Dimension(210, 42));
        jmiFiltrarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFiltrarProductosActionPerformed(evt);
            }
        });
        jmConsultas.add(jmiFiltrarProductos);

        jmiProductoStockLimite.setBackground(new java.awt.Color(193, 237, 254));
        jmiProductoStockLimite.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiProductoStockLimite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/en-stock.png"))); // NOI18N
        jmiProductoStockLimite.setText("Producto Stock Limite");
        jmiProductoStockLimite.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiProductoStockLimite.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiProductoStockLimite.setPreferredSize(new java.awt.Dimension(210, 42));
        jmiProductoStockLimite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProductoStockLimiteActionPerformed(evt);
            }
        });
        jmConsultas.add(jmiProductoStockLimite);

        jmiVentasyG.setBackground(new java.awt.Color(193, 237, 254));
        jmiVentasyG.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiVentasyG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/ganacias.png"))); // NOI18N
        jmiVentasyG.setText("VentasyGanancias");
        jmiVentasyG.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiVentasyG.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiVentasyG.setPreferredSize(new java.awt.Dimension(210, 42));
        jmiVentasyG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiVentasyGActionPerformed(evt);
            }
        });
        jmConsultas.add(jmiVentasyG);

        jmiListadoStockGeneral.setBackground(new java.awt.Color(193, 237, 254));
        jmiListadoStockGeneral.setFont(new java.awt.Font("Lucida Sans", 1, 13)); // NOI18N
        jmiListadoStockGeneral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_market/lista-de-verificacion.png"))); // NOI18N
        jmiListadoStockGeneral.setText("Listado Stock  General");
        jmiListadoStockGeneral.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 255, 255))); // NOI18N
        jmiListadoStockGeneral.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiListadoStockGeneral.setPreferredSize(new java.awt.Dimension(210, 42));
        jmiListadoStockGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiListadoStockGeneralActionPerformed(evt);
            }
        });
        jmConsultas.add(jmiListadoStockGeneral);

        jmPrincipal.add(jmConsultas);

        setJMenuBar(jmPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1202, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 649, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCategoriaActionPerformed
       Categoria cat=new Categoria();
       ConsultaCategoria modCon=new ConsultaCategoria();
       jfCategoria frmCat=new jfCategoria();
       CtrlCategoria ctrlCat=new CtrlCategoria(cat,modCon,frmCat);
       frmCat.setVisible(true);
       ctrlCat.iniciar();
    }//GEN-LAST:event_jmCategoriaActionPerformed

    private void jmABMUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmABMUsuarioActionPerformed
        Usuario usu=new Usuario();
        ConsultaUsuario modConUsu=new ConsultaUsuario();
        jfUsuario jfUsu=new jfUsuario();
        CtrlUsuario ctslUsu=new CtrlUsuario(usu,modConUsu,jfUsu);
        jfUsu.setVisible(true);
    }//GEN-LAST:event_jmABMUsuarioActionPerformed

    private void jmAbmProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAbmProductosActionPerformed
        Producto pro=new Producto();
        ConsultaProducto conPro=new ConsultaProducto();
        jfProducto jfPro=new jfProducto();
        ConsultaUsuario conU=new ConsultaUsuario();
        Usuario usu=new Usuario();
        CtrlProducto ctrlPro=new CtrlProducto(pro,conPro,jfPro);
        try {
            ctrlPro.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Error al buscar Categoria "+ex);
        }
        jfIngreso jfI=null;
        jfPro.jlbUsuario.setText(jfI.Usuario);
        usu.setNombreusu(jfI.Usuario);
        try {
            conU.buscarUsu(usu);
            if(usu.getRol()!=1){
              jfPro.jbtEliminar.setVisible(false);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Error al buscar Usuario"+ex);
        }
        jfPro.setVisible(true);
    }//GEN-LAST:event_jmAbmProductosActionPerformed

    private void jmVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmVentasActionPerformed
        Arqueo a=new Arqueo();
        ConArqueo conAr=new ConArqueo();
        jfIngreso jfI=null;
        formatoFecha fF=new formatoFecha();
        a.setCaja(Integer.valueOf(jfI.NroCaja));                
        a.setUsuarioApertura(jfI.Usuario);
        a.setEstado("A");
        try {
            if(conAr.buscar(a)==null){
                int op=JOptionPane.showConfirmDialog(rootPane,"Desea abrir un nuevo arqueo?");
                if(op==0){
                   a.setCaja(Integer.valueOf(jfI.NroCaja));
                   a.setEstado("A");
                   a.setFechaApertura(fF.fecha());
                   a.setFechaCierre(null);
                   a.setUsuarioApertura(jfI.Usuario);
                   a.setFechaCierre(null);
                   a.setHoraApertura(fF.hora());
                   a.setHoraCierre(null);
                   a.setObservacion("Inicio de arqueo");
                    try{
                       if(conAr.insertar(a)){
                        JOptionPane.showMessageDialog(rootPane,"Apertura de Arqueo exitosa...");   
                        conAr.buscarArqueoUsuario(a);
                        a.setId(a.getId());
                        iniciarVenta(a);
                       }else{
                           JOptionPane.showMessageDialog(rootPane,"Error al crear Arqueo...");
                       }
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(rootPane,"Ocurrio un error al crear Arqueo...");
                    }                
                }else{
                    JOptionPane.showMessageDialog(rootPane,"Cancelado...");
                }
            }else{
                if("igual".equals(verificarFechaArqueo(a,fF))){
                    iniciarVenta(a);                
                } else if("menor".equals(verificarFechaArqueo(a,fF))){
                    JOptionPane.showMessageDialog(rootPane,"Tiene Arqueo pendiente de Cerrar de fecha: "+a.getFechaApertura());                   
                } 
            }    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error al buscar Arqueo "+ex);
        }
        
    }//GEN-LAST:event_jmVentasActionPerformed
    public void iniciarVenta(Arqueo a){
        Venta fac=new Venta();
        ConsultaV conF=new ConsultaV();
        jfVenta jfVen=new jfVenta();
        CtrlVenta ctrlFac=new CtrlVenta(fac,conF,jfVen);        
        jfIngreso jfI=null;

        //jfVen.jlNroCaja.setText(jfI.NroCaja);
        try {
            ctrlFac.iniciar();
        } catch (SQLException ex) {
            Logger.getLogger(jfMarket.class.getName()).log(Level.SEVERE, null, ex);
        }
        jfVen.jlbCajero.setText(jfI.Usuario);
        jfVen.jlUsuario.setText(jfI.Usuario);
        jfVen.jlNroCaja.setText(jfI.NroCaja);
        jfVen.jtxtArqueo.setText(String.valueOf(a.getId()));
        jfVen.setVisible(true);
        //System.out.println("Usuario : "+jfI.Usuario);
    }
    private String verificarFechaArqueo(Arqueo a,formatoFecha f){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String f1=String.valueOf(a.getFechaApertura());
        String f2=String.valueOf(f.fecha());
        LocalDate fecha1 = LocalDate.parse(f1, formatter);
        LocalDate fecha2 = LocalDate.parse(f2, formatter);
        String r="";
        if(fecha1.isEqual(fecha2)){            
            System.out.println( "Fecha 1 es igual a fecha2" );
             r="igual";
        }else if(fecha1.isAfter(fecha2)){
            System.out.println( "Fecha 1 es mayor a fecha2");
            r= "mayor";
        }else if(fecha1.isBefore(fecha2)){
            System.out.println( "Fecha 1 es menor a fecha2");
            r= "menor";
        }
        return r;
    }
    private void jmiClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiClienteActionPerformed
        Persona cli=new Persona();
        ConsultaCliente conCli=new ConsultaCliente();
        jfCliente jfCli=new jfCliente();
        CtrlCliente ctrlCli=new CtrlCliente(cli,conCli,jfCli);
        jfCli.setVisible(true);
        try {
            ctrlCli.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al buscar Ciudad.."+ex);
        }
    }//GEN-LAST:event_jmiClienteActionPerformed

    private void jmiCierreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCierreActionPerformed
        Arqueo c=new Arqueo();
        ConArqueo cC=new ConArqueo();
        jfArqueo jfC=new jfArqueo();
        CtrlArqueo ctrlC=new CtrlArqueo(c,cC,jfC);       
        jfC.setVisible(true);
        jfIngreso jfI=null;
         c.setCaja(Integer.valueOf(jfI.NroCaja));
         c.setUsuarioApertura(jfI.Usuario);
         c.setEstado("A");
        try {
            cC.buscar(c);
            jfC.jtxtNroArqueo.setText(String.valueOf(c.getId()));
            jfC.jlbHoraApertura.setText(String.valueOf(c.getHoraApertura()));
        } catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, "Error al buscar Arqueo Usuario "+ex);  
        }
        jfC.jlbCajaNro.setText(jfI.NroCaja);
        jfC.jlbUsuario.setText(jfI.Usuario);
        
        try {
            ctrlC.iniciar();
        } catch (SQLException ex) {
            Logger.getLogger(jfMarket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiCierreActionPerformed

    private void jmiCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiarActionPerformed
       dispose();
       Usuario usu=new Usuario();
       ConsultaAcceso consulta=new ConsultaAcceso();        
       jfIngreso ing=new jfIngreso();
       ControlAcceso ctrl=new ControlAcceso(usu,consulta,ing);
       ctrl.iniciar();
       ing.setVisible(true);
    }//GEN-LAST:event_jmiCambiarActionPerformed

    private void jmiCobroCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCobroCreditoActionPerformed
        
        try {
            Arqueo a=verificarArqueo();
            if (a!=null)
                iniciarCobroCredito(a);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al iniciar Cobro Cr칠dito.."+ex);
        } 
    }//GEN-LAST:event_jmiCobroCreditoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Empresa e=new Empresa();
        ConsultaEmpresa conE=new ConsultaEmpresa();        
        jfEmpresa jfE=new jfEmpresa();
        CtrlEmpresa ctrlE=new CtrlEmpresa(e,conE,jfE);
        try {
            ctrlE.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al buscar Datos "+ex);
        }
        jfE.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmiMarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMarcasActionPerformed
        Marca m=new Marca();
        ConsultaMarca conM=new ConsultaMarca();
        jfMarca jfM=new jfMarca();
        CtrlMarca ctrlM=new CtrlMarca(m,conM,jfM);
        ctrlM.iniciar();
        jfM.setVisible(true);
    }//GEN-LAST:event_jmiMarcasActionPerformed

    private void jmiOtrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiOtrosActionPerformed
        Proveedor pro=new Proveedor();
        ConsultaProveedor conP=new ConsultaProveedor();
        jfProveedor jfP=new jfProveedor();
        CtrlProveedor ctrlP=new CtrlProveedor(pro,conP,jfP);
        try {
            ctrlP.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erros al cargar empresas"+ex);
        }
        jfP.setVisible(true);
    }//GEN-LAST:event_jmiOtrosActionPerformed

    private void jmiNotaCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNotaCreditoActionPerformed
                
        try {
            Arqueo a=verificarArqueo();
            if (a!=null)
                iniciarNota(a);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al iniciar Nota.."+ex);
        }
                       
    }//GEN-LAST:event_jmiNotaCreditoActionPerformed

    private void exitmarketMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitmarketMousePressed
        // al hacer click sobre el boton jlabel del exit cierra
        System.exit(0);
    }//GEN-LAST:event_exitmarketMousePressed

    private void exitmarketMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitmarketMouseEntered
        // Evento para que cambie de color al pasar el mouse por el boton exit
        exitmarket.setBackground(Color.red);
        btnexitmarket.setBackground(Color.red);
        exitmarket.setForeground(Color.WHITE);
    }//GEN-LAST:event_exitmarketMouseEntered

    private void exitmarketMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitmarketMouseExited
        // Evento para que cambie de color al pasar el mouse por el boton exit
        exitmarket.setBackground(new Color(153,204,255));
        btnexitmarket.setBackground(new Color(153,204,255));
        exitmarket.setForeground(new Color(0,1,59));
    }//GEN-LAST:event_exitmarketMouseExited

    private void jmiListadoStockGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiListadoStockGeneralActionPerformed
        Producto p=new Producto();
        ConsultaProducto conP=new ConsultaProducto();
        jfListadoStockGeneral l=new jfListadoStockGeneral();
        CtrlListadoSotckGeneral ctrlL=new CtrlListadoSotckGeneral(p,conP,l);
        try {
            ctrlL.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar productos"+ex);
        }
        l.setVisible(true);
    }//GEN-LAST:event_jmiListadoStockGeneralActionPerformed

    private void jmiVentasyGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiVentasyGActionPerformed
        Arqueo c=new Arqueo();
        ConArqueo conC=new ConArqueo();
        jfVentasyGanancias jfVG=new jfVentasyGanancias();
        CtrlVentasyGanancias ctrlVG=new CtrlVentasyGanancias(c,conC,jfVG);
        jfVG.setVisible(true);
        ctrlVG.iniciar();
    }//GEN-LAST:event_jmiVentasyGActionPerformed

    private void jmiProductoStockLimiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProductoStockLimiteActionPerformed
        Producto p=new Producto();
        ConsultaProducto conP=new ConsultaProducto();
        jfListadoProductoStockLimite l=new jfListadoProductoStockLimite();
        CtrlProductoListadoSotckLimite ctrlL=new CtrlProductoListadoSotckLimite(p,conP,l);
        try {
            ctrlL.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar empresas"+ex);
        }
        l.setVisible(true);

    }//GEN-LAST:event_jmiProductoStockLimiteActionPerformed

    private void jmiFiltrarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFiltrarProductosActionPerformed
        ConsultaProducto conPro=new ConsultaProducto();
        jfFiltraProducto jfF=new jfFiltraProducto();
        CtrlFiltroProducto ctrlF=new CtrlFiltroProducto(conPro,jfF);
        jfF.setVisible(true);
        try {
            ctrlF.iniciar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al buscar marcas y categorias.."+ex);
        }
    }//GEN-LAST:event_jmiFiltrarProductosActionPerformed
    private void iniciarNota(Arqueo a){
        NotaCredito fac=new NotaCredito();
        ConsultaNota conN=new ConsultaNota();
        jfNotaCredito jfN=new jfNotaCredito();
        CtrlNotaCredito ctrlFac=new CtrlNotaCredito(fac,conN,jfN);        
        jfIngreso jfI=null;

        //jfVen.jlNroCaja.setText(jfI.NroCaja);
        try {
            ctrlFac.iniciar();
        } catch (SQLException ex) {
            Logger.getLogger(jfMarket.class.getName()).log(Level.SEVERE, null, ex);
        }
        jfN.jlbCajero.setText(jfI.Usuario);
        jfN.jlUsuario.setText(jfI.Usuario);
        jfN.jlNroCaja.setText(jfI.NroCaja);
        jfN.jtxtArqueo.setText(String.valueOf(a.getId()));
        jfN.setVisible(true);
        //System.out.println("Usuario : "+jfI.Usuario);
    }
    private Arqueo verificarArqueo() throws SQLException{
        Arqueo a=new Arqueo();
        ConArqueo conAr=new ConArqueo();
        jfIngreso jfI=null;
        formatoFecha fF=new formatoFecha();
        a.setCaja(Integer.valueOf(jfI.NroCaja));                
        a.setUsuarioApertura(jfI.Usuario);
        a.setEstado("A");
        try {
            if(conAr.buscar(a)==null){
                int op=JOptionPane.showConfirmDialog(rootPane,"Desea abrir un nuevo arqueo?");
                if(op==0){
                   a.setCaja(Integer.valueOf(jfI.NroCaja));
                   a.setEstado("A");
                   a.setFechaApertura(fF.fecha());
                   a.setFechaCierre(null);
                   a.setUsuarioApertura(jfI.Usuario);
                   a.setFechaCierre(null);
                   a.setHoraApertura(fF.hora());
                   a.setHoraCierre(null);
                   a.setObservacion("Inicio de arqueo");
                    try{
                       if(conAr.insertar(a)){
                        JOptionPane.showMessageDialog(rootPane,"Apertura de Arqueo exitosa...");   
                        conAr.buscarArqueoUsuario(a);
                        a.setId(a.getId());
                        //iniciarVenta(a);
                        return a;
                       }else{
                           JOptionPane.showMessageDialog(rootPane,"Error al crear Arqueo...");
                       }
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(rootPane,"Ocurrio un error al crear Arqueo...");
                    }                
                }else{
                    JOptionPane.showMessageDialog(rootPane,"Cancelado...");
                }
            }else{
                if("igual".equals(verificarFechaArqueo(a,fF))){
                    return a;                
                } else if("menor".equals(verificarFechaArqueo(a,fF))){
                    JOptionPane.showMessageDialog(rootPane,"Tiene Arqueo pendiente de Cerrar de fecha: "+a.getFechaApertura());                   
                } 
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane,"Ocurrio un error al crear Arqueo...");
        }
        return null;
    }
    private void iniciarPagoCredito(Arqueo a){
        PagoCredito pCr=new PagoCredito();
        jfPagoCredito jfPcr=new jfPagoCredito();
        ConPagoCredito conPc=new ConPagoCredito();
        CtrlPagoCredito ctrlPc=new CtrlPagoCredito(pCr,jfPcr,conPc);
        jfIngreso jfI=null;        
        jfPcr.jlbUsuario.setText(jfI.Usuario);        
        ctrlPc.iniciar();
        jfPcr.jlbCajero.setText(jfI.Usuario);        
        jfPcr.jlbNroCaja.setText(jfI.NroCaja);
        jfPcr.jtxtArqueo.setText(String.valueOf(a.getId()));
        jfPcr.setVisible(true);
        //System.out.println("Usuario : "+jfI.Usuario);
    }
    private void iniciarCobroCredito(Arqueo a){
        CobroCredito cCr=new CobroCredito();
        jfCobroCredito jfCcr=new jfCobroCredito();
        ConCobroCredito conCc=new ConCobroCredito();
        CtrlCobroCredito ctrlCc=new CtrlCobroCredito(cCr,jfCcr,conCc);
        jfIngreso jfI=null;
        ctrlCc.iniciar();
        jfCcr.jlbUsuario.setText(jfI.Usuario);        
        jfCcr.jlbCajero.setText(jfI.Usuario);        
        jfCcr.jlbNroCaja.setText(jfI.NroCaja);
        jfCcr.jtxtArqueo.setText(String.valueOf(a.getId()));
        jfCcr.setVisible(true);
        //System.out.println("Usuario : "+jfI.Usuario);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfMarket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfMarket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfMarket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfMarket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfMarket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnexitmarket;
    private javax.swing.JLabel exitmarket;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    public javax.swing.JLabel jlbNombreUsu;
    public javax.swing.JLabel jlbUsuario;
    public javax.swing.JMenuItem jmABMUsuario;
    public javax.swing.JMenuItem jmAbmProductos;
    public javax.swing.JMenu jmCaja;
    public javax.swing.JMenuItem jmCategoria;
    public javax.swing.JMenu jmCliente;
    public javax.swing.JMenu jmConsultas;
    public javax.swing.JMenu jmMovimiento;
    public javax.swing.JMenuBar jmPrincipal;
    public javax.swing.JMenu jmProductos;
    public javax.swing.JMenu jmUsuario;
    public javax.swing.JMenuItem jmVentas;
    public javax.swing.JMenuItem jmiCambiar;
    public javax.swing.JMenuItem jmiCierre;
    public javax.swing.JMenuItem jmiCliente;
    public javax.swing.JMenuItem jmiCobroCredito;
    public javax.swing.JMenuItem jmiFiltrarProductos;
    public javax.swing.JMenuItem jmiListadoStockGeneral;
    public javax.swing.JMenuItem jmiMarcas;
    public javax.swing.JMenuItem jmiNotaCredito;
    private javax.swing.JMenuItem jmiOtros;
    public javax.swing.JMenuItem jmiProductoStockLimite;
    public javax.swing.JMenuItem jmiVentasyG;
    public javax.swing.JPanel jpFondo;
    // End of variables declaration//GEN-END:variables
    /*class FondoPanel extends JPanel{
        private Image imagen;
        
        @Override
        public void paint (Graphics g){
            imagen=new ImageIcon(getClass().getResource("/img/lagunablanca.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            //Para que no dibuje el fondo por defecto, se desactiva con false
            setOpaque(false);
            //Dibuja los componentes que se establecieron dentro del JPanel, botones, Jlabel, etc.
            super.paint(g);
        }
    }*/
}
